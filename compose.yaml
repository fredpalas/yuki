services:
  php-fpm:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
      target: dev
      args:
        WWWUSER: ${WWWUSER:-1000}
        ARCH: ${ARCH:-amd64}
    volumes:
      - .:/var/www
      - php_socket:/var/run/php
    restart: unless-stopped
    environment:
      - RUN_MIGRATION=${RUN_MIGRATION:-false}
      - RUN_CACHE=${RUN_CACHE:-false}
      - RUN_COMPOSER=${RUN_COMPOSER:-false}
    depends_on:
      database:
        condition: service_healthy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  webserver:
    image: public.ecr.aws/nginx/nginx:latest
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - php_socket:/var/run/php
    ports:
      - ${NGINX_HOST_HTTP_PORT:-80}:80
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: unless-stopped
    depends_on:
      php-fpm:
        condition: service_started
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  # database driver local on ./docker/db/data
  database_data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: ./docker/db/data
      o: bind
  php_socket:
###< doctrine/doctrine-bundle ###
